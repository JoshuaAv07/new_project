{"ast":null,"code":"const URL = \"https://rickandmortyapi.com/api/character/\";\n\nclass Http {\n  constructor() {\n    this.get_characters = async () => {\n      try {\n        const request = await fetch(`${URL}`);\n        const response = await request.json();\n        return response;\n      } catch (err) {\n        throw new Error(err);\n      }\n    };\n\n    this.get_character = async id => {\n      try {\n        const request = await fetch(`${URL}${id}`);\n        const response = await request.json();\n        return response;\n      } catch (err) {\n        throw new Error(err);\n      }\n    };\n  }\n\n}\n\nHttp.instance = new Http();\nexport default Http;","map":{"version":3,"sources":["C:/Users/07020/samples/react2/new_project/src/lib/request.js"],"names":["URL","Http","get_characters","request","fetch","response","json","err","Error","get_character","id","instance"],"mappings":"AAAA,MAAMA,GAAG,GAAG,4CAAZ;;AAEA,MAAMC,IAAN,CAAU;AAAA;AAAA,SAGNC,cAHM,GAGW,YAAU;AACvB,UAAG;AACC,cAAMC,OAAO,GAAG,MAAMC,KAAK,CAAG,GAAEJ,GAAI,EAAT,CAA3B;AACA,cAAMK,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;AACA,eAAOD,QAAP;AAEH,OALD,CAKC,OAAME,GAAN,EAAU;AACP,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AACJ,KAZK;;AAAA,SAaNE,aAbM,GAaU,MAAMC,EAAN,IAAa;AACzB,UAAG;AACC,cAAMP,OAAO,GAAG,MAAMC,KAAK,CAAG,GAAEJ,GAAI,GAAEU,EAAG,EAAd,CAA3B;AACA,cAAML,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;AACA,eAAOD,QAAP;AAEH,OALD,CAKC,OAAME,GAAN,EAAU;AACP,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AACJ,KAtBK;AAAA;;AAAA;;AAAJN,I,CACKU,Q,GAAW,IAAIV,IAAJ,E;AAuBtB,eAAeA,IAAf","sourcesContent":["const URL = \"https://rickandmortyapi.com/api/character/\"\r\n\r\nclass Http{\r\n    static instance = new Http()\r\n\r\n    get_characters = async() =>{\r\n        try{\r\n            const request = await fetch (`${URL}`)\r\n            const response = await request.json()\r\n            return response\r\n    \r\n        }catch(err){\r\n            throw new Error(err);\r\n        }\r\n    }\r\n    get_character = async(id) => {\r\n        try{\r\n            const request = await fetch (`${URL}${id}`)\r\n            const response = await request.json()\r\n            return response\r\n    \r\n        }catch(err){\r\n            throw new Error(err);\r\n        }\r\n    }\r\n}\r\nexport default Http;"]},"metadata":{},"sourceType":"module"}